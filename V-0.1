import g4p_controls.*;



int originX = 0;
int originY = 0;
int scal = 30;
int len = 0;
int ent = 0;
int entnum = -1;

int Lwpolyline = 0;
int Arc = 0;

String temp = "";
String tempplusone = "";

boolean print = false;
boolean record = false;
boolean newent = false;

ArrayList<Entity> entities = new ArrayList<Entity>();


void setup() {
  size(1100, 600);
  String lines[] = loadStrings("dxf.rtf");
  println("there are " + lines.length + " lines");
  //println(lines);
  for (int i = 0; i < lines.length; i++) {
    //print(lines[i]);
    temp = lines[i];
    tempplusone = lines[i+1];
    len = temp.length();
    if (len>0) {
      len -= 1;
    }
    temp = temp.substring(0, len);
    len = tempplusone.length();
    if (len>0) {
      len -= 1;
    }
    tempplusone = tempplusone.substring(0, len);
    temp = trim(temp);
    tempplusone = trim(tempplusone);
    if (temp.equals("ENTITIES")) {
      print(temp);
      print("\t" + "\t" + i);
      println();
      println();
      println();
      println();
      print = true;
    }
    if (print) {
      println();
      print("'" + temp + "'" + "\t");
      detect();     //Detects if there is a new entity, and records them
    }
    if (temp.equals("ENDSEC") && print) {
      print = false;
      println();
      println(i);
    }
    //print("\t");
  }
  println();
  print("There are " + entities.size() + " Entities");
  for (int i = 0; i<entities.size (); i++) {
    Entity entity = entities.get(i);
    if (entity.type == 0) {
      Lwpolyline += 1;
    } else if (entity.type == 1) {
      Arc += 1;
    }
  }
  println();
  print("LWPOLYLINE(S): " + Lwpolyline);
  println();
  print("ARC(S): " + Arc);
  background(150);
  originX = width/2;
  originY = height/2;
  exit();
}



void draw() {
  translate(originX, originY);
  stroke(175);
  for (int i = -18; i<18; i++) {
    int z = i * scal;
    line(originX, z, -originX, z);
    line(z, originY, z, -originY);
  }
  stroke(100);
  line(originX, 0, -originX, 0);
  line(0, originY, 0, -originY);
  stroke(0);
  line(0, 0, 0, 2*scal);
  line(0, 2*scal, 2*scal, 2*scal);
  line(2*scal, 2*scal, 2*scal, 0);
  line(2*scal, 0, 0, 0);
  line(0, 0, 2*scal, 2*scal);
  resetMatrix();
}













void detect() {
  if (entnum>=0) {
    Entity entity = entities.get(entnum);
    if (temp.equals("90")){
    entity.verts = int(tempplusone);
    print("\t" + int(tempplusone));
    print("\t" + entity.verts);
  }
  }
  if (temp.equals("LWPOLYLINE")) {
    print("LWPOLYLINE Detected, Now Recording Geometry");
    newent = true;
    ent = 0;
  }
  if (temp.equals("ARC")) {
    print("ARC Detected, Now Recording Geometry");
    newent = true;
    ent = 1;
  }
  /*
  for entity types: 
   0 = LWPOLYLINE
   1 = ARC
   */
  if (newent) {
    entities.add(new Entity(ent));
    newent = false;
    entnum += 1;
  }
}












public class Entity {
  int type = 0;
  int verts = 0;
  
  /*
  for entity types: 
  0 = LWPOLYLINE
  1 = ARC
  */
  Entity(int temptype){
    type = temptype;
  }
  
  
}
